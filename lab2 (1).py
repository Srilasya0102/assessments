# -*- coding: utf-8 -*-
"""lab2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yWrQk6_Rn5A7lh6E1GS2xjfqytxKWR-T
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import warnings
warnings.filterwarnings('ignore')
from sklearn.svm import SVC
from sklearn.cluster import KMeans
from sklearn.preprocessing import MinMaxScaler
from matplotlib import pyplot as plt
# %matplotlib inline

d=pd.read_csv('/content/Mall_Customers.csv')
df=pd.DataFrame(d)
df.head()
df.info()
df.isnull().sum()
df.dropna()
# scaler = MinMaxScaler()
# scaler.fit(df[['Annual Income']])
# df['Annual Income'] = scaler.transform(df[['Annual Income']])
# scaler.fit(df[['Spending Score']])
# df['Spending Score'] = scaler.transform(df[['Spending Score']])
print(df.head())
x=df.iloc[:,:-1]
y=df.iloc[:,-1:]
sse = []
# clustering
k_rng = range(1,10)
for k in k_rng:
    km = KMeans(n_clusters=k)
    km.fit(x,y)
    sse.append(km.inertia_)

plt.xlabel('K')
plt.ylabel('Sum of squared error')
plt.plot(k_rng,sse)